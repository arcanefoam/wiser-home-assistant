name: Release

on:
  release:
    types: [published]

jobs:
  release:
    name: Prepare release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      # Build
      - name: Build the file
        run: |
          cd /home/runner/work/boilerplate-card/boilerplate-card
          npm install
          npm run build

      # Upload build file to the releas as an asset.
      - name: Upload zip to release
        uses: svenstaro/upload-release-action@v1-release

        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: /home/runner/work/boilerplate-card/boilerplate-card/dist/boilerplate-card.js
          asset_name: boilerplate-card.js
          tag: ${{ github.ref }}
          overwrite: true


#    package:
#      name: Package for distribution
#      needs: card
#      runs-on: ubuntu-latest
#
#      steps:
#        - name: Download card
#          uses: actions/download-artifact@v2
#          with:
#            name: bundle
#            path: dist
#        - name: Display structure of downloaded files
#          run: ls -R
#          working-directory: dist
#        - name: Guide
#          run: ls -R
#        - name: Zip Folder
#          run: zip -r release.zip dist
#        - name: Release to Github
#          run: echo "Release"
#  release:
#    name: Upload Release Asset
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - name: Build project # This would actually build your project, using zip for an example artifact
#        run: |
#          zip --junk-paths my-artifact README.md
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          draft: false
#          prerelease: false
#      - name: Upload Release Asset
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
#          asset_path: ./my-artifact.zip
#          asset_name: my-artifact.zip
#          asset_content_type: application/zip

